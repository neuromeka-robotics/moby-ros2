# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import MotorControlgRPCServer_pb2 as MotorControlgRPCServer__pb2


class GRPCMotorControlTaskStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMotorTxPDO = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetMotorTxPDO',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.MotorDriverTx.FromString,
                )
        self.GetMotorRxPDO = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetMotorRxPDO',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.MotorDriverRx.FromString,
                )
        self.SetServo = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetServo',
                request_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.SetZeroPosAsCurrent = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetZeroPosAsCurrent',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.GetZeroPosCount = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetZeroPosCount',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.IntVal.FromString,
                )
        self.GetControlData = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetControlData',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.ControlData.FromString,
                )
        self.GetControlGain = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetControlGain',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.ControlGain.FromString,
                )
        self.SetControlGain = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetControlGain',
                request_serializer=MotorControlgRPCServer__pb2.ControlGain.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.GetTrajMaxValue = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetTrajMaxValue',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.TrajMax.FromString,
                )
        self.SetTrajMaxValue = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetTrajMaxValue',
                request_serializer=MotorControlgRPCServer__pb2.TrajMax.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.GetPositionLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetPositionLimit',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.PositionLimit.FromString,
                )
        self.SetPositionLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetPositionLimit',
                request_serializer=MotorControlgRPCServer__pb2.PositionLimit.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.GetVelocityLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetVelocityLimit',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.VelocityLimit.FromString,
                )
        self.SetVelocityLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetVelocityLimit',
                request_serializer=MotorControlgRPCServer__pb2.VelocityLimit.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.GetTorqueLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/GetTorqueLimit',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.TorqueLimit.FromString,
                )
        self.SetTorqueLimit = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetTorqueLimit',
                request_serializer=MotorControlgRPCServer__pb2.TorqueLimit.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.MoveTo = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/MoveTo',
                request_serializer=MotorControlgRPCServer__pb2.MoveCmd.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.MoveBy = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/MoveBy',
                request_serializer=MotorControlgRPCServer__pb2.MoveCmd.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.StopMotion = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/StopMotion',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.StartRTLogging = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/StartRTLogging',
                request_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.EndRTLogging = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/EndRTLogging',
                request_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.SetLoggerBuffer = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetLoggerBuffer',
                request_serializer=MotorControlgRPCServer__pb2.IntVals.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.RTLoggerSave = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/RTLoggerSave',
                request_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )
        self.SetFilterCutoffFreq = channel.unary_unary(
                '/GRPCMotorControl.GRPCMotorControlTask/SetFilterCutoffFreq',
                request_serializer=MotorControlgRPCServer__pb2.ServoIdxVal.SerializeToString,
                response_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                )


class GRPCMotorControlTaskServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMotorTxPDO(self, request, context):
        """EtherCAT data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMotorRxPDO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetServo(self, request, context):
        """Servo setting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetZeroPosAsCurrent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetZeroPosCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetControlData(self, request, context):
        """Get control data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetControlGain(self, request, context):
        """Controller and Trajectory Setting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetControlGain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrajMaxValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTrajMaxValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPositionLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPositionLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVelocityLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVelocityLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTorqueLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTorqueLimit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveTo(self, request, context):
        """Move command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveBy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopMotion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRTLogging(self, request, context):
        """Data logging
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndRTLogging(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLoggerBuffer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RTLoggerSave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFilterCutoffFreq(self, request, context):
        """For Debugging
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GRPCMotorControlTaskServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMotorTxPDO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMotorTxPDO,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.MotorDriverTx.SerializeToString,
            ),
            'GetMotorRxPDO': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMotorRxPDO,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.MotorDriverRx.SerializeToString,
            ),
            'SetServo': grpc.unary_unary_rpc_method_handler(
                    servicer.SetServo,
                    request_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'SetZeroPosAsCurrent': grpc.unary_unary_rpc_method_handler(
                    servicer.SetZeroPosAsCurrent,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'GetZeroPosCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetZeroPosCount,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.IntVal.SerializeToString,
            ),
            'GetControlData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetControlData,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.ControlData.SerializeToString,
            ),
            'GetControlGain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetControlGain,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.ControlGain.SerializeToString,
            ),
            'SetControlGain': grpc.unary_unary_rpc_method_handler(
                    servicer.SetControlGain,
                    request_deserializer=MotorControlgRPCServer__pb2.ControlGain.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'GetTrajMaxValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrajMaxValue,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.TrajMax.SerializeToString,
            ),
            'SetTrajMaxValue': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTrajMaxValue,
                    request_deserializer=MotorControlgRPCServer__pb2.TrajMax.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'GetPositionLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPositionLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.PositionLimit.SerializeToString,
            ),
            'SetPositionLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPositionLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.PositionLimit.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'GetVelocityLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVelocityLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.VelocityLimit.SerializeToString,
            ),
            'SetVelocityLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVelocityLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.VelocityLimit.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'GetTorqueLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTorqueLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.TorqueLimit.SerializeToString,
            ),
            'SetTorqueLimit': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTorqueLimit,
                    request_deserializer=MotorControlgRPCServer__pb2.TorqueLimit.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'MoveTo': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveTo,
                    request_deserializer=MotorControlgRPCServer__pb2.MoveCmd.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'MoveBy': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveBy,
                    request_deserializer=MotorControlgRPCServer__pb2.MoveCmd.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'StopMotion': grpc.unary_unary_rpc_method_handler(
                    servicer.StopMotion,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdx.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'StartRTLogging': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRTLogging,
                    request_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'EndRTLogging': grpc.unary_unary_rpc_method_handler(
                    servicer.EndRTLogging,
                    request_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'SetLoggerBuffer': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLoggerBuffer,
                    request_deserializer=MotorControlgRPCServer__pb2.IntVals.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'RTLoggerSave': grpc.unary_unary_rpc_method_handler(
                    servicer.RTLoggerSave,
                    request_deserializer=MotorControlgRPCServer__pb2.Empty.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
            'SetFilterCutoffFreq': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFilterCutoffFreq,
                    request_deserializer=MotorControlgRPCServer__pb2.ServoIdxVal.FromString,
                    response_serializer=MotorControlgRPCServer__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GRPCMotorControl.GRPCMotorControlTask', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GRPCMotorControlTask(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMotorTxPDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetMotorTxPDO',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.MotorDriverTx.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMotorRxPDO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetMotorRxPDO',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.MotorDriverRx.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetServo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetServo',
            MotorControlgRPCServer__pb2.Empty.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetZeroPosAsCurrent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetZeroPosAsCurrent',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetZeroPosCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetZeroPosCount',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.IntVal.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetControlData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetControlData',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.ControlData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetControlGain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetControlGain',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.ControlGain.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetControlGain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetControlGain',
            MotorControlgRPCServer__pb2.ControlGain.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrajMaxValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetTrajMaxValue',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.TrajMax.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTrajMaxValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetTrajMaxValue',
            MotorControlgRPCServer__pb2.TrajMax.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPositionLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetPositionLimit',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.PositionLimit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPositionLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetPositionLimit',
            MotorControlgRPCServer__pb2.PositionLimit.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVelocityLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetVelocityLimit',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.VelocityLimit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVelocityLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetVelocityLimit',
            MotorControlgRPCServer__pb2.VelocityLimit.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTorqueLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/GetTorqueLimit',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.TorqueLimit.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTorqueLimit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetTorqueLimit',
            MotorControlgRPCServer__pb2.TorqueLimit.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/MoveTo',
            MotorControlgRPCServer__pb2.MoveCmd.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/MoveBy',
            MotorControlgRPCServer__pb2.MoveCmd.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopMotion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/StopMotion',
            MotorControlgRPCServer__pb2.ServoIdx.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartRTLogging(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/StartRTLogging',
            MotorControlgRPCServer__pb2.Empty.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndRTLogging(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/EndRTLogging',
            MotorControlgRPCServer__pb2.Empty.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLoggerBuffer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetLoggerBuffer',
            MotorControlgRPCServer__pb2.IntVals.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RTLoggerSave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/RTLoggerSave',
            MotorControlgRPCServer__pb2.Empty.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFilterCutoffFreq(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GRPCMotorControl.GRPCMotorControlTask/SetFilterCutoffFreq',
            MotorControlgRPCServer__pb2.ServoIdxVal.SerializeToString,
            MotorControlgRPCServer__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
